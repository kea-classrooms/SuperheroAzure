# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy JAR app to Azure Web App - SuperherodabateApp

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Java version
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Build with Maven
        run: mvn clean install

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: java-app
          path: '${{ github.workspace }}/target/*.jar'

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: java-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'SuperherodabateApp'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_86ACDBB6B4D44EA1BD804C1D29317BCF }}
          package: '*.jar'

      - name: Check if SQL files have been modified
        id: check-sql-files
        run: |
          SQL_FILES=$(git diff --name-only HEAD HEAD~ | grep "\.sql$")
          if [[ -z "$SQL_FILES" ]]; then
            echo "No SQL files found."
          else
            echo "SQL files found: $SQL_FILES"
            echo "::set-output name=sql-files::$SQL_FILES"
          fi

      - name: Execute SQL files against Azure Database for MySQL
        if: steps.check-sql-files.outputs.sql-files != ''
        env:
          MYSQL_SERVER_NAME: your-mysql-server-name.mysql.database.azure.com
          MYSQL_DATABASE_NAME: your-mysql-database-name
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: |
          for file in ${GITHUB_WORKSPACE}/${{ steps.check-sql-files.outputs.sql-files }}; do
            mysql -h $MYSQL_SERVER_NAME -u $MYSQL_USERNAME -p$MYSQL_PASSWORD $MYSQL_DATABASE_NAME < $file
          done
